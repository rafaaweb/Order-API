openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a contract api to describe the resources available by the Product API
  termsOfService: http://swagger.io/terms/
  contact:
    email: luizcantrella@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://localhost:8080/api-order/v1
tags:
  - name: order
    description: Everything about your Oders
paths:
  /order:
    post:
      tags:
        - order
      summary: Create a new order
      description: Create a new order
      operationId: addOrder
      requestBody:
        description: Create a new order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestDTO'
        required: true
      responses:
        '201':
          description: Order created successfully
          headers:
            Location:
              schema:
                type: string
              description: The URL of the created resource
              example: http://orderapi.com/api/v1/orders/10
        '405':
          description: Invalid input
    get:
      tags:
        - order 
      summary: List all orders
      description: List all orders
      operationId: listAllOrders
      responses:
        '404':
          description: Order not found
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableOrder'
  /order/{orderId}:
    patch:
      tags:
        - order
      summary: Order Update
      description: Order Update
      operationId: OrderUpdate
      parameters:
        - name: orderId
          in: path
          description: Id of order to update
          required: true
          schema:
            type: integer
            format: int64 
      requestBody:
        description: Order for update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestDTO'
        required: true
      responses:
        '404':
          description: Order not found
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderResponseDTO'
    get:
      tags:
        - order
      summary: Get a order
      description: Get a order
      operationId: getOrder
      parameters:
        - name: orderId
          in: path
          description: Id of order to update
          required: true
          schema:
            type: integer
            format: int64 
      responses:
        '404':
          description: Order not found
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleOrderResponseDTO'
components:
  schemas:
    Id:
      type: integer
      format: int64
    ProductDTO:
      required:
        - productId
        - name
        - amount
      type: object
      properties:
        productId:
          type: integer
          format: int64
        name:
          type: string
          description: Product name
          example: Batata Rechada  
        amount:
          type: integer
          description: Quantity of products   
          example: 123
    AddressDTO:
      required:
        - street
        - number
        - postalCode
        - complement
        - state
        - city
        - country
      type: object
      properties:
        street:
          type: string
          description: The name of street in the address
          example: Groove St.
        number:
          type: integer
          description: The number of the address
          example: 1234
        postalCode:
          type: integer
          description: Postal Code of the address
          example: 12345678
        complement:
          type: string
          description: Complement of the address
          example: Back house
        state:
          type: string
          description: State of the address
          example: SÃ£o paulo
        city:
          type: string
          description: City of the address
          example: Araraquara
        country:
          type: string
          description: Country of the address
          example: Brazil      
    OrderRequestDTO:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
        product:
          $ref: '#/components/schemas/ProductDTO'
        address:
          $ref: "#/components/schemas/AddressDTO"
    SimpleOrderResponseDTO:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
        orderItens:
          $ref: '#/components/schemas/ProductDTO'
        address:
          $ref: '#/components/schemas/AddressDTO'  
    UpdateOrderResponseDTO:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
        orderItens:
          $ref: '#/components/schemas/ProductDTO'
        address:
          $ref: '#/components/schemas/AddressDTO'
    PageableTemplate:
      description: Pageable template
      type: object
      properties:
        'pageable':
          type: object
          properties:
            'moreElements':
              type: boolean
              description: Has more elements that were not returned
            'pageNumber':
              type: integer
              format: int64
          required:
            - 'moreElements'
        'content':
          type: array
          minItems: 0
          maxItems: 50
          items:
            type: object
      required:
        - 'pageable'
        - 'content'
    PageableOrder:
      description: A pageable of orders
      allOf:
        - $ref: '#/components/schemas/PageableTemplate'
        - type: object
          properties:
            'content':
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/SimpleOrderResponseDTO'
                  - type: object
                    required:
                      - productItens
                      - orderId
                  
                                 
                  
    

            
                      
      
      
                        